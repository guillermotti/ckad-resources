source <(kubectl completion bash)
echo "source <(kubectl completion bash)" >> ~/.bashrc
alias k=kubectl
complete -F __start_kubectl k
alias kubens='kubectl config set-context --current --namespace '

vim ~/.vimrc
set ts=2 sw=2 expandtab
set nu

--dry-run=client
--grace-period=0 --force
--all-namespaces
--show-labels
k explain po.spec --recursive
k exec -it nginx /bin/bash
k exec -it nginx sh
k logs nginx > logs.txt

-- /bin/sh -c 'while true; do echo hello; sleep 10;done'

k run nginx --image=nginx --restart=Never -o yaml --dry-run=client --labels=app=v1 -- /bin/sh -c 'echo hello;sleep 3600' > pod.yaml
k delete po nginx --grace-period=0 --force
k label po nginx new-label=pepe
k set image deploy nginx nginx=nginx:1.91 //  k set image po nginx nginx=nginx:1.91
k rollout status deploy nginx
k rollout undo deploy nginx --to-revision=2
k rollout history deploy nginx --revision=4
k rollout pause deploy nginx
k scale deploy nginx --replicas=5
k autoscale deploy nginx --min=5 --max=10 --cpu-percent=80

# Create pod
k run NAME --dry-run=client --image=IMAGE --restart=Never --port=PORT --env=KEY=VALUE -o yaml > FILE.yaml

# Create pod with resource requests and limits
k run NAME --image=IMAGE --requests='cpu=100m,memory=256Mi' k run NAME --image=IMAGE --requests='cpu=100m,memory=256Mi' --limits='cpu=200m,memory=512Mi'--limits='cpu=200m,memory=512Mi'

# Create deployment
k create deployment NAME --image=IMAGE --dry-run=client -o yaml > FILE.yaml

# Create deploy with N replicas with "KEY=VALUE" labels
k create deploy NAME --image=IMAGE && k scale deploy/NAME --replicas=N && k label deploy NAME KEY=VALUE

# Create job
k create job NAME --image=IMAGE --dry-run=client -o yaml > FILE.yaml

# Create cronjob
k create cronjob NAME --image=IMAGE --dry-run=client --schedule="* * * * *" -o yaml > FILE.yaml

# Observe that a pod as well as a service are created
k run nginx --image=nginx --restart=Never --port=80 --expose

# Create service from deploy foo
k expose deploy foo --port=6262 --target-port=8080

# Create a deployment and then a pod exposing a service to copy the content of the pod to the deployment file
k create deploy NAME --image=IMAGE --dry-run=client -o yaml > deployment.yaml
k run NAME --image=IMAGE --port=PORT --dry-run=client -o yaml --env=KEY=VALUE --labels=KEY=VALUE --requests='cpu=100m,memory=256Mi' --limits='cpu=200m,memory=512Mi' --expose -- /bin/sh -c 'sleep 3600' >> deployment.yaml
# Copy the content of pod.spec into deploy.spec.template, delete the pod template and run
k apply -f deployment.yaml

# Exam instructions
man lf_exam

# VIM

w - First character of the next word
W - The same than w but for the WORD
e - Last letter of the current word, if you already are in the last letter you will be at the last letter of the next word
E - The same than e but for the WORD
b - First letter of the current word, if you already are in the first letter you will be at the first letter of the previous word
B - The same than b but for the WORD
x - Delete character under the cursor (dl does the same)
X - Delete character before the cursor (db does the same)
r - Replace the character under the cursor
D - Delete from the current position until the end of the line
d - Delete range indicated by following motion (w, e, etc). dd for the entire line
~ - Flip the case of the character under the cursor
$ - To the end of the line
0 - To the first character of the line
^ - To the first non-blank character of the line
, - Reverse the last t/T/f/F search
f - Move to the next occurence of a given character in the same line
F - Move to the previous occurence of a given character in the same line
; - Repeat the last t/T/f/F search
T - Move to one character before the previous occurence of a given character in the same line
t - Move to one character before the next occurence of a given character in the same line
z - Scroll screen so the cursor current position will be at the top (t), bottom (b) or middle (z)
% - Move to the matching bracket or parentheses
G - Move to the last line of the text (soft beginning of line) or to the given [count] line number
g - Use 'gg' to move to the first line of the text (soft beginning of the line)
* - 
